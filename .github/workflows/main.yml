name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        role-to-assume: ${{ secrets.AWS_IAM_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Build and push Docker image
      run: |
        IMAGE_TAG=$(date +%Y%m%d%H%M%S)
        docker build -t ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG .
        docker push ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

    - name: Deploy to EC2
      run: |
        IMAGE_TAG=$(date +%Y%m%d%H%M%S)
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY }} ec2-user@${{ secrets.EC2_INSTANCE_ID }} << 'EOF'
          docker pull ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
          docker stop my-app || true
          docker rm my-app || true
          docker run -d --name my-app -p 80:80 ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
        EOF
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
